{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/Signin/Signin.js","components/Register/Register.js","App.js","serviceWorker.js","index.js","components/Logo/chip.svg"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","src","brain","alt","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","name","entries","FaceRecognition","box","imageUrl","id","top","topRow","left","leftCol","right","rightCol","bottom","bottomRow","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","htmlFor","this","React","Component","Register","onNameChange","particlesOptions","particles","line_linked","shadow","enable","color","blur","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","err","console","log","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.ffad185e.chunk.js","sourcesContent":["import React from 'react';\nimport 'tachyons';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n  if (isSignedIn) {\n    return (\n      <nav style={{display: 'flex', justifyContent:'flex-end'}}>\n        <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\n      </nav>\n    );\n  } else {\n    return (\n      <nav style={{display: 'flex', justifyContent:'flex-end'}}>\n        <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign in</p>\n        <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\n      </nav>\n    );\n  }\n}\n\nexport default Navigation;","import React from 'react';\nimport Tilt from 'react-tilt';\nimport brain from './chip.svg';\nimport './Logo.css';\nimport 'tachyons';\n\nconst Logo = () => {\n  return(\n    <div className='ma4 mt0'>\n      <Tilt className=\"Tilt\" options={{ max : 45 }} style={{ height: 150, width: 150 }} >\n        <div className=\"Tilt-inner\"><img src={brain} alt=\"Logo\"/> </div>\n      </Tilt>\n    </div>\n  );\n}\n\nexport default Logo;","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n    return(\n      <div>\n        <p className='f3'>\n            {'This Magic Brain will detect faces in your pictures'}\n        </p>\n        <div className='center'>\n            <div className='form center pa4 br3 shadow-2 w-50'>\n                <input type=\"text\" className='f4 pa2 w-70 center' onChange={onInputChange} />\n                <button\n                  className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\n                  onClick={onButtonSubmit}>Detect</button>\n            </div>\n        </div>\n      </div>\n    );\n  }\n\n  export default ImageLinkForm;","import React from 'react';\n\nconst Rank = ({ name, entries }) => {\n    return(\n      <div>\n        <div className='white f3'>\n          {`${name}, your current entry count is... `}\n        </div>\n        <div className='white f1'>\n          {entries}\n        </div>\n      </div>\n    );\n  }\n\n  export default Rank;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ box, imageUrl }) => {\n  return(\n    <div className='center ma'>\n      <div className='absolute mt2'>\n        <img id='inputimage' src={imageUrl} alt='' width='500px' height='auto' />\n        <div className='bounding-box' style={{top: box.topRow, left: box.leftCol, right: box.rightCol, bottom: box.bottomRow}}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default FaceRecognition;","import React from 'react';\n\nclass Signin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInEmail: '',\n      signInPassword: ''\n    }\n  }\n\n  onEmailChange = (event) => {\n    this.setState({signInEmail: event.target.value})\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({signInPassword: event.target.value})\n  }\n\n  onSubmitSignIn = () => {\n    fetch('https://gb-smart-brain-api.herokuapp.com/signin', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.signInEmail,\n        password: this.state.signInPassword\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if(user.id) {\n          this.props.loadUser(user);\n          this.props.onRouteChange('home');\n        }\n      })\n  }\n\n  render() {\n    return (\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                       type=\"email\"\n                       name=\"email-address\"\n                       id=\"email-address\"\n                       onChange={this.onEmailChange} />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                       type=\"password\"\n                       name=\"password\"\n                       id=\"password\"\n                       onChange={this.onPasswordChange} />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onSubmitSignIn}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Sign in\" />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p onClick={() => this.props.onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\n            </div>\n          </div>\n        </main>\n      </article>\n    )\n  }\n}\nexport default Signin;","import React from 'react';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      name: ''\n    }\n  }\n  onNameChange = (event) => {\n    this.setState({name: event.target.value})\n  }\n\n  onEmailChange = (event) => {\n    this.setState({email: event.target.value})\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({password: event.target.value})\n  }\n\n  onSubmitSignIn = () => {\n    fetch('https://gb-smart-brain-api.herokuapp.com/register', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        name: this.state.name\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if(user.id) {\n          this.props.loadUser(user);\n          this.props.onRouteChange('home');\n        }\n      })\n  }\n\n  render() {\n    const { onRouteChange } = this.props;\n    return (\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Name</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  onChange={this.onNameChange} />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                <input\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  onChange={this.onEmailChange} />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                <input\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  onChange={this.onPasswordChange} />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onSubmitSignIn}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Register\" />\n            </div>\n          </div>\n        </main>\n      </article>\n    )\n  }\n}\nexport default Register;","import React from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nimport './App.css';\n\nconst particlesOptions = {\n  particles: {\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 5\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = initialState;\n    }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height),\n    }\n  }\n\n  displayFaceBox = (box) => this.setState({box});\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch('https://gb-smart-brain-api.herokuapp.com/image', {\n      method: 'post',\n      headers: { 'content-type': 'application/json'},\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n    .then(response => response.json())\n    .then(response => {\n      if (response) {\n        fetch('https://gb-smart-brain-api.herokuapp.com/image', {\n          method: 'put',\n          headers: { 'content-type': 'application/json'},\n          body: JSON.stringify({\n            id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, { entries: count }))\n        })\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))})\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange} />\n        { this.state.route === 'home'\n          ? <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl} />\n            </div>\n          : (\n            this.state.route === 'signin'\n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/chip.7ae9c5ee.svg\";"],"sourceRoot":""}